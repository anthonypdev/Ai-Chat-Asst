/* ==========================================================================
   MAIN CSS - PARKLAND AI OPUS MAGNUM EDITION
   Import Orchestrator & Root Styles
   ========================================================================== */

/* ==========================================================================
   CORE FOUNDATION IMPORTS - Load First
   These are essential for the entire application's base styling.
   ========================================================================== */

/* Design System Foundation */
@import url('core/variables.css');    /* Defines all CSS custom properties (colors, spacing, typography, etc.) */
@import url('core/reset.css');        /* Modern browser normalization and baseline reset */
@import url('core/typography.css');   /* Base typographic styles, heading system, text utilities */
@import url('core/utilities.css');    /* Reusable helper classes (visibility, flex, spacing, etc.) */

/* ==========================================================================
   COMPONENT IMPORTS - UI Building Blocks
   These style common UI elements used throughout the application.
   ========================================================================== */

@import url('components/buttons.css');   /* Styles for all button variants and states */
@import url('components/forms.css');     /* Styles for input fields, textareas, selects, checkboxes, etc. */
@import url('components/modals.css');    /* Styles for modal dialogs and overlays */
@import url('components/messages.css');  /* Styles for chat messages, user/assistant bubbles, typing indicator */
@import url('components/sidebar.css');   /* Styles for the main application sidebar and navigation */

/* ==========================================================================
   THEME SYSTEM IMPORTS - Base and Default (Always loaded)
   Theme-specific styles are loaded dynamically by ThemeManager.js
   ========================================================================== */

/* Base theme structure (shared foundational styles for all themes, e.g., character UI containers) */
@import url('themes/base-theme.css');

/* Default theme (loaded as fallback and base visual style) */
@import url('themes/default/theme.css');      /* Specific styles for the default theme */
@import url('themes/default/animations.css'); /* Animations specific to the default theme */

/* ==========================================================================
   ROOT APPLICATION STYLES
   Global styles applied to html, body, and the main app container.
   ========================================================================== */

html {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
  font-feature-settings: 'kern' 1, 'liga' 1, 'calt' 1;
  font-kerning: normal;
  font-variant-ligatures: common-ligatures;
  font-size: var(--font-size-base); /* Root font size for rem calculations */
  line-height: var(--line-height-normal);
  overflow-x: hidden; /* Prevent horizontal scrollbars */
  scroll-behavior: smooth; /* Default smooth scrolling */
  scrollbar-width: thin; /* For Firefox */
  scrollbar-color: var(--gray-400) var(--gray-100); /* For Firefox */
}

@media (prefers-reduced-motion: reduce) {
  html {
    scroll-behavior: auto !important; /* Override for reduced motion */
  }
}

body {
  margin: 0;
  padding: 0;
  font-family: var(--font-family-default);
  color: var(--text-primary);
  background-color: var(--bg-primary);
  min-height: 100vh;
  min-height: 100dvh; /* More accurate viewport height on mobile */
  overflow-x: hidden;
  display: flex; /* Prepare for potential full-page flex layouts if needed */
  flex-direction: column;
  position: relative; /* For absolutely positioned children like overlays */
  transition: background-color 0.5s var(--ease-in-out), color 0.5s var(--ease-in-out);
}

/* Ensures the app container takes up available space, useful if body is flex */
#appContainer {
  flex-grow: 1;
  display: flex; /* This will be key for sidebar + main content layout */
  position: relative; /* For z-indexing of internal components */
  overflow: hidden; /* Prevent app container itself from causing scrollbars due to transitions */
}

/* Application loading state */
body.app-loading {
  overflow: hidden; /* Prevent scrolling during initial load */
  cursor: wait;
}
body.app-loading * {
  cursor: wait !important;
}

/* Theme transition state */
body.theme-transitioning {
  pointer-events: none !important; /* Prevent interaction during full-screen theme transitions */
  user-select: none !important;
}
body.theme-transitioning * {
  pointer-events: none !important;
}


/* ==========================================================================
   LOADING SCREEN STYLES (Global, also defined in default/theme.css but good to have a base here)
   ========================================================================== */

#loadingOverlay {
  position: fixed;
  inset: 0;
  background: var(--bg-primary, #FFFFFF); /* Fallback to a solid color initially */
  z-index: var(--z-loading-overlay); /* Ensure it's on top */
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  opacity: 1;
  visibility: visible;
  transition: opacity 0.5s var(--ease-out) 0.3s, visibility 0s linear 0.8s; /* Delay hiding visibility */
  will-change: opacity, visibility;
}

#loadingOverlay.hidden {
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
  transition: opacity 0.5s var(--ease-in), visibility 0s linear 0.5s;
}

.loading-logo-container {
  margin-bottom: var(--space-lg);
}

.loading-logo {
  font-size: var(--loading-logo-size, 5rem); /* From variables.css */
  font-weight: var(--font-weight-black);
  color: var(--primary);
  /* Animation for logo is in default/animations.css and theme-specific animation files */
}

.loading-text {
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-medium);
  color: var(--text-secondary);
  margin-bottom: var(--space-xl);
  opacity: 0; /* Animation will fade it in */
  animation: fadeInTextLoadingEnhancedOpus 1.2s var(--ease-out) 0.3s forwards; /* Animation from default/animations.css */
}

.progress-bar-container {
  width: clamp(200px, 60%, 400px);
  height: var(--loading-progress-height, 10px);
  background-color: var(--gray-200);
  border-radius: var(--radius-full);
  overflow: hidden;
  margin-bottom: var(--space-md);
}

.progress-bar {
  width: 0%; /* JS will update this */
  height: 100%;
  background-color: var(--primary);
  border-radius: var(--radius-full);
  transition: width 0.3s var(--ease-out);
  /* Shine/pulse animation from default/animations.css */
  animation: progressBarShineOpus 1.5s infinite linear;
}

.loading-tip {
  font-size: var(--font-size-sm);
  color: var(--text-tertiary);
  margin-top: var(--space-lg);
  font-style: italic;
  max-width: 80%;
  text-align: center;
  opacity: 0; /* Animation will fade it in */
  animation: fadeInTipLoadingOpus 1.2s var(--ease-out) 0.6s forwards; /* Animation from default/animations.css */
}

/* ==========================================================================
   THEME TRANSITION OVERLAYS (Base structural style)
   ========================================================================== */

.theme-transition-overlay {
  position: fixed;
  inset: 0;
  z-index: var(--z-animation-overlay);
  pointer-events: none; /* Allows clicks through unless explicitly made active */
  opacity: 0;
  visibility: hidden;
  /* Default transition for the overlay itself - can be overridden by specific transitions */
  transition: opacity 0.3s var(--ease-out), visibility 0s linear 0.3s;
}

.theme-transition-overlay.active {
  opacity: 1;
  visibility: visible;
  pointer-events: auto; /* Block interaction during transition */
  transition-delay: 0s;
}

.transition-animation-container {
  position: absolute;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

/* Fallback if specific transition CSS fails to load or apply */
.jaws-wave-transition.hidden,
.jurassic-gate-transition.hidden {
  display: none !important;
}
