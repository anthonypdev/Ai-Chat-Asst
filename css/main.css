/* ==========================================================================
   MAIN CSS - PARKLAND AI OPUS MAGNUM EDITION
   Import Orchestrator & Root Styles
   ========================================================================== */

/* ==========================================================================
   CORE FOUNDATION IMPORTS - Load First
   These are essential for the entire application's base styling.
   The order of these core imports is important.
   ========================================================================== */

/* 1. Design Tokens (CSS Custom Properties) */
@import url('core/variables.css');    /* Defines all CSS custom properties (colors, spacing, typography, etc.) */

/* 2. Browser Normalization & Reset */
@import url('core/reset.css');        /* Modern browser normalization and baseline reset */

/* 3. Base Typographic Styles */
@import url('core/typography.css');   /* Base typographic styles, heading system, text utilities */

/* 4. Utility Helper Classes */
@import url('core/utilities.css');    /* Reusable helper classes (visibility, flex, spacing, etc.) */

/* ==========================================================================
   COMPONENT IMPORTS - UI Building Blocks
   These style common UI elements used throughout the application.
   ========================================================================== */

@import url('components/buttons.css');   /* Styles for all button variants and states */
@import url('components/forms.css');     /* Styles for input fields, textareas, selects, checkboxes, etc. */
@import url('components/modals.css');    /* Styles for modal dialogs and overlays */
@import url('components/messages.css');  /* Styles for chat messages, user/assistant bubbles, typing indicator */
@import url('components/sidebar.css');   /* Styles for the main application sidebar and navigation */
@import url('components/typing-indicator.css'); /* Styles for real-time typing indicators and message status */
@import url('components/search.css');    /* Styles for chat search and filtering interface */

/* ==========================================================================
   THEME SYSTEM IMPORTS - Base and Default (Always loaded)
   Theme-specific styles (Jaws, Jurassic) are loaded dynamically by ThemeManager.js
   by adding/removing <link> tags to the <head>, not typically @imported here.
   ========================================================================== */

/* 1. Base theme structure (shared foundational styles for all themes) */
@import url('themes/base-theme.css');

/* 2. Default theme (loaded as fallback and base visual style) */
@import url('themes/default/theme.css');      /* Specific styles for the default theme */
@import url('themes/default/animations.css'); /* Animations specific to the default theme */

/* ==========================================================================
   ROOT APPLICATION STYLES
   Global styles applied to html, body, and the main app container.
   These are styles that don't neatly fit into the above categories or
   provide overarching layout.
   ========================================================================== */

html {
  /* Base font size is set in typography.css using var(--font-size-base) from variables.css */
  /* Other global html settings like text rendering, scroll behavior are in reset.css or typography.css */
}

body {
  /* Base body styles (font-family, color, background-color) are set in reset.css and typography.css using variables */
  /* Ensure body covers full viewport and enables flex layout for its direct children if needed for sticky footers etc. */
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  min-height: 100dvh; /* More accurate for mobile browsers */
  position: relative; /* For absolutely positioned children like overlays */
  overflow-x: hidden; /* Prevent horizontal scroll on body */
}

/* Main application container - takes up remaining space if body is flex */
#appContainer {
  flex-grow: 1;
  display: flex; /* Key for sidebar + main content layout */
  position: relative; /* For z-indexing of internal components */
  overflow: hidden; /* Prevent app container itself from causing scrollbars due to transitions */
  background-color: var(--bg-primary); /* Ensure app container has a background */
}

/* Application loading state - managed by JavaScript */
body.app-loading {
  overflow: hidden; /* Prevent scrolling during initial load */
  cursor: wait;
}
body.app-loading * { /* Force wait cursor on all elements during load */
  cursor: wait !important;
}

/* Theme transition state - managed by JavaScript */
body.theme-transitioning {
  pointer-events: none !important; /* Prevent interaction during full-screen theme transitions */
  user-select: none !important;
}
body.theme-transitioning * { /* Ensure children are also non-interactive */
  pointer-events: none !important;
}


/* ==========================================================================
   LOADING SCREEN STYLES (Basic structure, enhanced by themes)
   ========================================================================== */

#loadingOverlay {
  position: fixed;
  inset: 0;
  background: var(--bg-backdrop, rgba(17, 24, 39, 0.98)); /* Fallback using gray-900 from default */
  z-index: var(--z-loading-overlay);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  opacity: 1;
  visibility: visible;
  transition: opacity 0.5s var(--ease-out) 0.3s, visibility 0s linear 0.8s;
  will-change: opacity, visibility;
}

#loadingOverlay.hidden {
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
  transition: opacity 0.5s var(--ease-in), visibility 0s linear 0.5s;
}

.loading-logo-container {
  margin-bottom: var(--space-lg);
  /* Specific logo animation will be in theme or default/animations.css */
}

.loading-logo {
  font-size: var(--loading-logo-size, 5rem); /* From variables.css */
  font-weight: var(--font-weight-black);
  color: var(--primary);
  /* Theme-specific animations will style this further */
}

.loading-text {
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-medium);
  color: var(--text-secondary);
  margin-bottom: var(--space-xl);
  opacity: 0;
  /* Fade-in animation usually handled by default/animations.css */
}

.progress-bar-container {
  width: clamp(200px, 60%, 400px);
  height: var(--loading-progress-height, 10px);
  background-color: var(--gray-200);
  border-radius: var(--radius-full);
  overflow: hidden;
  margin-bottom: var(--space-md);
}

.progress-bar {
  width: 0%; /* JavaScript will update this */
  height: 100%;
  background-color: var(--primary);
  border-radius: var(--radius-full);
  transition: width 0.3s var(--ease-out);
  /* Shine/pulse animation usually handled by default/animations.css */
}

.loading-tip {
  font-size: var(--font-size-sm);
  color: var(--text-tertiary);
  margin-top: var(--space-lg);
  font-style: italic;
  max-width: 80%;
  text-align: center;
  opacity: 0;
  /* Fade-in animation usually handled by default/animations.css */
}

/* ==========================================================================
   THEME TRANSITION OVERLAYS (Base structural style)
   Specific animations are in theme transition CSS files.
   ========================================================================== */

.theme-transition-overlay {
  position: fixed;
  inset: 0;
  z-index: var(--z-animation-overlay);
  pointer-events: none;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s var(--ease-out), visibility 0s linear 0.3s;
}

.theme-transition-overlay.active {
  opacity: 1;
  visibility: visible;
  pointer-events: auto; /* Allow interaction if the overlay itself is interactive */
  transition-delay: 0s;
}

.transition-animation-container {
  position: absolute;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

/* Ensure specific transition containers are hidden by default if not active */
.jaws-wave-transition.hidden,
.jurassic-gate-transition.hidden {
  display: none !important;
}
