/* ==========================================================================
   UTILITY CLASSES - PARKLAND AI OPUS MAGNUM EDITION
   Reusable helper classes for layout, visibility, and accessibility.
   ========================================================================== */

/* ==========================================================================
   VISIBILITY & DISPLAY
   ========================================================================== */

.hidden {
  display: none !important;
}

.invisible {
  visibility: hidden !important;
}

.block { display: block !important; }
.inline-block { display: inline-block !important; }
.inline { display: inline !important; }
.flex { display: flex !important; }
.inline-flex { display: inline-flex !important; }
.grid { display: grid !important; }
.inline-grid { display: inline-grid !important; }
.table { display: table !important; }
.table-row { display: table-row !important; }
.table-cell { display: table-cell !important; }
.flow-root { display: flow-root !important; } /* For containing floats or new block formatting context */

/* ==========================================================================
   ACCESSIBILITY
   ========================================================================== */

/* Screen reader only content: Hides an element visually but keeps it accessible to screen readers. */
.sr-only {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important; /* Fixes potential layout shifts if the element has margin */
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

/* Use in conjunction with .sr-only to make an element focusable when navigated to via keyboard */
.sr-only-focusable:active,
.sr-only-focusable:focus {
  position: static !important;
  width: auto !important;
  height: auto !important;
  padding: var(--space-sm) var(--space-md) !important;
  margin: 0 !important;
  overflow: visible !important;
  clip: auto !important;
  white-space: normal !important;
  background-color: var(--bg-elevated, #FFFFFF) !important;
  color: var(--text-primary, #16191E) !important;
  z-index: var(--z-maximum) !important; /* Ensure it's on top */
  border: 1px solid var(--primary, #7A77FF) !important;
  border-radius: var(--radius-md, 6px) !important;
  box-shadow: var(--shadow-lg, 0 10px 15px -3px rgba(0,0,0,0.1)) !important;
}

/* Hide visually but keep available for screen readers (older method, .sr-only is generally better) */
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  white-space: nowrap; /* Ensure it doesn't wrap and take up space */
}

/* ==========================================================================
   FLEXBOX & GRID UTILITIES
   ========================================================================== */

/* Flex Direction */
.flex-row { flex-direction: row !important; }
.flex-row-reverse { flex-direction: row-reverse !important; }
.flex-col { flex-direction: column !important; }
.flex-col-reverse { flex-direction: column-reverse !important; }

/* Flex Wrap */
.flex-wrap { flex-wrap: wrap !important; }
.flex-wrap-reverse { flex-wrap: wrap-reverse !important; }
.flex-nowrap { flex-wrap: nowrap !important; }

/* Flex Grow & Shrink & Basis */
.flex-grow { flex-grow: 1 !important; }
.flex-grow-0 { flex-grow: 0 !important; }
.flex-shrink { flex-shrink: 1 !important; }
.flex-shrink-0 { flex-shrink: 0 !important; }
.flex-basis-0 { flex-basis: 0% !important; }
.flex-basis-auto { flex-basis: auto !important; }

/* Flex Shorthand */
.flex-1 { flex: 1 1 0% !important; }
.flex-auto { flex: 1 1 auto !important; }
.flex-initial { flex: 0 1 auto !important; }
.flex-none { flex: none !important; }

/* Align Items */
.items-start { align-items: flex-start !important; }
.items-end { align-items: flex-end !important; }
.items-center { align-items: center !important; }
.items-baseline { align-items: baseline !important; }
.items-stretch { align-items: stretch !important; }

/* Justify Content */
.justify-start { justify-content: flex-start !important; }
.justify-end { justify-content: flex-end !important; }
.justify-center { justify-content: center !important; }
.justify-between { justify-content: space-between !important; }
.justify-around { justify-content: space-around !important; }
.justify-evenly { justify-content: space-evenly !important; }

/* Align Self */
.self-auto { align-self: auto !important; }
.self-start { align-self: flex-start !important; }
.self-end { align-self: flex-end !important; }
.self-center { align-self: center !important; }
.self-stretch { align-self: stretch !important; }
.self-baseline { align-self: baseline !important; }

/* Gap Utilities (using CSS variables for consistency) */
.gap-0 { gap: var(--space-0) !important; }
.gap-xs { gap: var(--space-xs) !important; }
.gap-sm { gap: var(--space-sm) !important; }
.gap-md { gap: var(--space-md) !important; }
.gap-lg { gap: var(--space-lg) !important; }
.gap-xl { gap: var(--space-xl) !important; }
.gap-2xl { gap: var(--space-2xl) !important; }

/* Grid Template Columns & Rows (examples, expand as needed) */
.grid-cols-1 { grid-template-columns: repeat(1, minmax(0, 1fr)) !important; }
.grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)) !important; }
.grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)) !important; }
.grid-cols-4 { grid-template-columns: repeat(4, minmax(0, 1fr)) !important; }
.grid-cols-auto { grid-template-columns: auto !important; }
.grid-rows-auto { grid-template-rows: auto !important; }

/* ==========================================================================
   SPACING UTILITIES (MARGIN & PADDING)
   Using CSS variables defined in variables.css for consistency.
   Format: [m|p][t|r|b|l|x|y]-[size|auto]
   ========================================================================== */

/* All-sides margin/padding */
.m-0 { margin: var(--space-0) !important; }
.m-1 { margin: var(--space-1) !important; } /* 4px if --space-unit is 4px */
.m-2 { margin: var(--space-2) !important; } /* 8px */
.m-3 { margin: var(--space-3) !important; } /* 12px */
.m-4 { margin: var(--space-4) !important; } /* 16px */
.m-5 { margin: var(--space-5) !important; } /* 20px */
.m-6 { margin: var(--space-6) !important; } /* 24px */
.m-8 { margin: var(--space-8) !important; } /* 32px */
.m-auto { margin: auto !important; }

.p-0 { padding: var(--space-0) !important; }
.p-1 { padding: var(--space-1) !important; }
.p-2 { padding: var(--space-2) !important; }
.p-3 { padding: var(--space-3) !important; }
.p-4 { padding: var(--space-4) !important; }
.p-5 { padding: var(--space-5) !important; }
.p-6 { padding: var(--space-6) !important; }
.p-8 { padding: var(--space-8) !important; }

/* Directional margin/padding */
/* Top */
.mt-0 { margin-top: var(--space-0) !important; } .pt-0 { padding-top: var(--space-0) !important; }
.mt-1 { margin-top: var(--space-1) !important; } .pt-1 { padding-top: var(--space-1) !important; }
.mt-2 { margin-top: var(--space-2) !important; } .pt-2 { padding-top: var(--space-2) !important; }
.mt-3 { margin-top: var(--space-3) !important; } .pt-3 { padding-top: var(--space-3) !important; }
.mt-4 { margin-top: var(--space-4) !important; } .pt-4 { padding-top: var(--space-4) !important; }
.mt-5 { margin-top: var(--space-5) !important; } .pt-5 { padding-top: var(--space-5) !important; }
.mt-6 { margin-top: var(--space-6) !important; } .pt-6 { padding-top: var(--space-6) !important; }
.mt-8 { margin-top: var(--space-8) !important; } .pt-8 { padding-top: var(--space-8) !important; }
.mt-auto { margin-top: auto !important; }

/* Bottom */
.mb-0 { margin-bottom: var(--space-0) !important; } .pb-0 { padding-bottom: var(--space-0) !important; }
.mb-1 { margin-bottom: var(--space-1) !important; } .pb-1 { padding-bottom: var(--space-1) !important; }
.mb-2 { margin-bottom: var(--space-2) !important; } .pb-2 { padding-bottom: var(--space-2) !important; }
.mb-3 { margin-bottom: var(--space-3) !important; } .pb-3 { padding-bottom: var(--space-3) !important; }
.mb-4 { margin-bottom: var(--space-4) !important; } .pb-4 { padding-bottom: var(--space-4) !important; }
.mb-5 { margin-bottom: var(--space-5) !important; } .pb-5 { padding-bottom: var(--space-5) !important; }
.mb-6 { margin-bottom: var(--space-6) !important; } .pb-6 { padding-bottom: var(--space-6) !important; }
.mb-8 { margin-bottom: var(--space-8) !important; } .pb-8 { padding-bottom: var(--space-8) !important; }
.mb-auto { margin-bottom: auto !important; }

/* Left */
.ml-0 { margin-left: var(--space-0) !important; } .pl-0 { padding-left: var(--space-0) !important; }
.ml-1 { margin-left: var(--space-1) !important; } .pl-1 { padding-left: var(--space-1) !important; }
.ml-2 { margin-left: var(--space-2) !important; } .pl-2 { padding-left: var(--space-2) !important; }
.ml-3 { margin-left: var(--space-3) !important; } .pl-3 { padding-left: var(--space-3) !important; }
.ml-4 { margin-left: var(--space-4) !important; } .pl-4 { padding-left: var(--space-4) !important; }
.ml-5 { margin-left: var(--space-5) !important; } .pl-5 { padding-left: var(--space-5) !important; }
.ml-6 { margin-left: var(--space-6) !important; } .pl-6 { padding-left: var(--space-6) !important; }
.ml-8 { margin-left: var(--space-8) !important; } .pl-8 { padding-left: var(--space-8) !important; }
.ml-auto { margin-left: auto !important; }

/* Right */
.mr-0 { margin-right: var(--space-0) !important; } .pr-0 { padding-right: var(--space-0) !important; }
.mr-1 { margin-right: var(--space-1) !important; } .pr-1 { padding-right: var(--space-1) !important; }
.mr-2 { margin-right: var(--space-2) !important; } .pr-2 { padding-right: var(--space-2) !important; }
.mr-3 { margin-right: var(--space-3) !important; } .pr-3 { padding-right: var(--space-3) !important; }
.mr-4 { margin-right: var(--space-4) !important; } .pr-4 { padding-right: var(--space-4) !important; }
.mr-5 { margin-right: var(--space-5) !important; } .pr-5 { padding-right: var(--space-5) !important; }
.mr-6 { margin-right: var(--space-6) !important; } .pr-6 { padding-right: var(--space-6) !important; }
.mr-8 { margin-right: var(--space-8) !important; } .pr-8 { padding-right: var(--space-8) !important; }
.mr-auto { margin-right: auto !important; }

/* Horizontal (x-axis) */
.mx-0 { margin-left: var(--space-0) !important; margin-right: var(--space-0) !important; } .px-0 { padding-left: var(--space-0) !important; padding-right: var(--space-0) !important; }
.mx-1 { margin-left: var(--space-1) !important; margin-right: var(--space-1) !important; } .px-1 { padding-left: var(--space-1) !important; padding-right: var(--space-1) !important; }
.mx-2 { margin-left: var(--space-2) !important; margin-right: var(--space-2) !important; } .px-2 { padding-left: var(--space-2) !important; padding-right: var(--space-2) !important; }
.mx-3 { margin-left: var(--space-3) !important; margin-right: var(--space-3) !important; } .px-3 { padding-left: var(--space-3) !important; padding-right: var(--space-3) !important; }
.mx-4 { margin-left: var(--space-4) !important; margin-right: var(--space-4) !important; } .px-4 { padding-left: var(--space-4) !important; padding-right: var(--space-4) !important; }
.mx-5 { margin-left: var(--space-5) !important; margin-right: var(--space-5) !important; } .px-5 { padding-left: var(--space-5) !important; padding-right: var(--space-5) !important; }
.mx-6 { margin-left: var(--space-6) !important; margin-right: var(--space-6) !important; } .px-6 { padding-left: var(--space-6) !important; padding-right: var(--space-6) !important; }
.mx-8 { margin-left: var(--space-8) !important; margin-right: var(--space-8) !important; } .px-8 { padding-left: var(--space-8) !important; padding-right: var(--space-8) !important; }
.mx-auto { margin-left: auto !important; margin-right: auto !important; }

/* Vertical (y-axis) */
.my-0 { margin-top: var(--space-0) !important; margin-bottom: var(--space-0) !important; } .py-0 { padding-top: var(--space-0) !important; padding-bottom: var(--space-0) !important; }
.my-1 { margin-top: var(--space-1) !important; margin-bottom: var(--space-1) !important; } .py-1 { padding-top: var(--space-1) !important; padding-bottom: var(--space-1) !important; }
.my-2 { margin-top: var(--space-2) !important; margin-bottom: var(--space-2) !important; } .py-2 { padding-top: var(--space-2) !important; padding-bottom: var(--space-2) !important; }
.my-3 { margin-top: var(--space-3) !important; margin-bottom: var(--space-3) !important; } .py-3 { padding-top: var(--space-3) !important; padding-bottom: var(--space-3) !important; }
.my-4 { margin-top: var(--space-4) !important; margin-bottom: var(--space-4) !important; } .py-4 { padding-top: var(--space-4) !important; padding-bottom: var(--space-4) !important; }
.my-5 { margin-top: var(--space-5) !important; margin-bottom: var(--space-5) !important; } .py-5 { padding-top: var(--space-5) !important; padding-bottom: var(--space-5) !important; }
.my-6 { margin-top: var(--space-6) !important; margin-bottom: var(--space-6) !important; } .py-6 { padding-top: var(--space-6) !important; padding-bottom: var(--space-6) !important; }
.my-8 { margin-top: var(--space-8) !important; margin-bottom: var(--space-8) !important; } .py-8 { padding-top: var(--space-8) !important; padding-bottom: var(--space-8) !important; }
.my-auto { margin-top: auto !important; margin-bottom: auto !important; }

/* ==========================================================================
   WIDTH & HEIGHT UTILITIES
   ========================================================================== */

.w-full { width: 100% !important; }
.w-screen { width: 100vw !important; }
.w-auto { width: auto !important; }
.w-1\/2 { width: 50% !important; }
.w-1\/3 { width: 33.333333% !important; }
.w-2\/3 { width: 66.666667% !important; }
.w-1\/4 { width: 25% !important; }
.w-3\/4 { width: 75% !important; }

.h-full { height: 100% !important; }
.h-screen { height: 100vh !important; }
.h-dvh { height: 100dvh !important; } /* Dynamic viewport height */
.h-auto { height: auto !important; }

.min-h-screen { min-height: 100vh !important; }
.min-h-dvh { min-height: 100dvh !important; }
.max-w-screen-lg { max-width: var(--breakpoint-lg) !important; } /* Example max width */
.max-w-screen-xl { max-width: var(--breakpoint-xl) !important; }

/* ==========================================================================
   BORDER & SHADOW UTILITIES
   ========================================================================== */

.rounded { border-radius: var(--radius-md) !important; } /* Default rounded */
.rounded-none { border-radius: var(--radius-none) !important; }
.rounded-sm { border-radius: var(--radius-sm) !important; }
.rounded-md { border-radius: var(--radius-md) !important; }
.rounded-lg { border-radius: var(--radius-lg) !important; }
.rounded-xl { border-radius: var(--radius-xl) !important; }
.rounded-2xl { border-radius: var(--radius-2xl) !important; }
.rounded-3xl { border-radius: var(--radius-3xl) !important; }
.rounded-full { border-radius: var(--radius-full) !important; }

.border { border-width: 1px !important; border-style: solid !important; border-color: var(--border) !important; }
.border-0 { border-width: 0 !important; }
.border-t { border-top-width: 1px !important; border-style: solid !important; border-color: var(--border) !important;}
.border-b { border-bottom-width: 1px !important; border-style: solid !important; border-color: var(--border) !important;}
.border-l { border-left-width: 1px !important; border-style: solid !important; border-color: var(--border) !important;}
.border-r { border-right-width: 1px !important; border-style: solid !important; border-color: var(--border) !important;}

.shadow { box-shadow: var(--shadow-md) !important; } /* Default shadow */
.shadow-xs { box-shadow: var(--shadow-xs) !important; }
.shadow-sm { box-shadow: var(--shadow-sm) !important; }
.shadow-md { box-shadow: var(--shadow-md) !important; }
.shadow-lg { box-shadow: var(--shadow-lg) !important; }
.shadow-xl { box-shadow: var(--shadow-xl) !important; }
.shadow-2xl { box-shadow: var(--shadow-2xl) !important; }
.shadow-inner { box-shadow: var(--shadow-inner) !important; }
.shadow-none { box-shadow: var(--shadow-none) !important; }

/* ==========================================================================
   CURSOR UTILITIES
   ========================================================================== */

.cursor-pointer { cursor: pointer !important; }
.cursor-wait { cursor: wait !important; }
.cursor-not-allowed { cursor: not-allowed !important; }
.cursor-default { cursor: default !important; }
.cursor-text { cursor: text !important; }
.cursor-move { cursor: move !important; }
.cursor-grab { cursor: grab !important; }
.cursor-grabbing { cursor: grabbing !important; }

/* ==========================================================================
   OVERFLOW & OTHER MISC UTILITIES
   ========================================================================== */

.overflow-hidden { overflow: hidden !important; }
.overflow-visible { overflow: visible !important; }
.overflow-auto { overflow: auto !important; }
.overflow-y-auto { overflow-y: auto !important; }
.overflow-x-auto { overflow-x: auto !important; }
.overflow-y-hidden { overflow-y: hidden !important; }
.overflow-x-hidden { overflow-x: hidden !important; }

.user-select-none { user-select: none !important; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; }
.user-select-text { user-select: text !important; -webkit-user-select: text; -moz-user-select: text; -ms-user-select: text; }
.pointer-events-none { pointer-events: none !important; }
.pointer-events-auto { pointer-events: auto !important; }

/* Clearfix (legacy, but sometimes useful for float-based layouts if not using flex/grid) */
.clearfix::after {
  content: "";
  clear: both;
  display: table;
}

/* Image replacement (for accessibility with background images) */
.image-replace {
  text-indent: 100%;
  white-space: nowrap;
  overflow: hidden;
  color: transparent; /* Ensure text color is transparent */
}

/* Aspect ratio utility (modern CSS aspect-ratio property) */
.aspect-ratio-16-9 { aspect-ratio: 16 / 9 !important; }
.aspect-ratio-4-3 { aspect-ratio: 4 / 3 !important; }
.aspect-ratio-1-1 { aspect-ratio: 1 / 1 !important; }
.aspect-ratio-auto { aspect-ratio: auto !important; }

/* Animated elements base class (if common animation properties are needed) */
.animated {
  /* animation-duration: 1s;  Define specific durations per animation */
  /* animation-fill-mode: both; Retain styles after animation */
}

/* General class for elements that should have GPU acceleration hint */
.gpu-accelerate {
  transform: translateZ(0);
  backface-visibility: hidden;
  perspective: 1000px; /* Optional, but good for consistency if 3D transforms are used */
}

/* Performance optimization: Containment */
.contain-layout { contain: layout !important; }
.contain-paint { contain: paint !important; }
.contain-size { contain: size !important; }
.contain-style { contain: style !important; }
.contain-content { contain: content !important; } /* layout + style + paint */
.contain-strict { contain: strict !important; }   /* size + layout + style + paint */

/* Center absolute positioned element */
.center-absolute {
    position: absolute !important;
    top: 50% !important;
    left: 50% !important;
    transform: translate(-50%, -50%) !important;
}

/* Full cover absolute positioned element */
.cover-absolute {
    position: absolute !important;
    top: 0 !important;
    left: 0 !important;
    width: 100% !important;
    height: 100% !important;
}
