/* ==========================================================================
   BASE THEME - PARKLAND AI OPUS MAGNUM EDITION
   Shared foundational styles, variables, and structures for ALL themes.
   This file ensures consistency before theme-specific overrides are applied.
   ========================================================================== */

/* ==========================================================================
   BASE THEME ARCHITECTURE & LAYOUT VARIABLES
   These can be overridden by specific themes if needed, but provide defaults.
   ========================================================================== */
:root {
  /* Default z-index for theme-specific character UI elements */
  --z-character-ui: var(--z-popover, 1060); /* Default to sit above most UI but below modals */
  --z-character-speech-bubble: calc(var(--z-character-ui) + 1);

  /* Default z-index for full-screen theme transition overlays */
  --z-theme-transition-overlay: var(--z-animation-overlay, 2100); /* Very high, above modals */

  /* Default properties for environmental effects layers within themes */
  --env-layer-base: 1;
  --env-layer-ambient: 2;
  --env-layer-particles: 3;
  --env-layer-characters: 10; /* Relative to its parent container if applicable */
  --env-layer-transitions: 100; /* Relative to its parent container */

  /* Blend modes for environmental effects (can be overridden by themes) */
  --env-blend-mode-multiply: multiply;
  --env-blend-mode-screen: screen;
  --env-blend-mode-overlay: overlay;
  --env-blend-mode-soft-light: soft-light;
  --env-blend-mode-hard-light: hard-light;
  --env-blend-mode-difference: difference;
  --env-blend-mode-exclusion: exclusion;
  --env-blend-mode-hue: hue;
  --env-blend-mode-saturation: saturation;
  --env-blend-mode-color: color;
  --env-blend-mode-luminosity: luminosity;

  /* Base transition for components that might change with themes */
  --component-theme-transition:
    background-color var(--transition-medium) var(--ease-in-out),
    color var(--transition-medium) var(--ease-in-out),
    border-color var(--transition-medium) var(--ease-in-out),
    box-shadow var(--transition-medium) var(--ease-in-out),
    fill var(--transition-medium) var(--ease-in-out), /* For SVGs */
    stroke var(--transition-medium) var(--ease-in-out); /* For SVGs */
}

/* ==========================================================================
   SHARED STRUCTURES FOR THEMED ELEMENTS
   ========================================================================== */

/* Main Application Container - theming hook */
.app-container {
  transition: var(--component-theme-transition);
  background-color: var(--bg-primary); /* Base background */
}

/* Chat Area - theming hook */
.chat-area {
  transition: var(--component-theme-transition);
  background-color: var(--bg-secondary); /* Base background for chat area */
  position: relative; /* For positioning environmental effects */
  overflow: hidden; /* Contain environmental effects if needed */
}

/* Sidebar - theming hook */
.sidebar {
  transition: var(--component-theme-transition), width var(--transition-base) var(--ease-in-out), transform var(--transition-base) var(--ease-in-out);
  background-color: var(--bg-tertiary); /* Base background for sidebar */
}

/* Modals - theming hook */
.modal {
  transition: var(--component-theme-transition), transform 0.3s var(--ease-back-out), opacity 0.3s var(--ease-out);
  background-color: var(--bg-elevated);
}
.modal-overlay {
  transition: background-color 0.5s var(--ease-in-out), backdrop-filter 0.5s var(--ease-in-out), opacity 0.3s var(--ease-out), visibility 0s linear 0.3s;
  background-color: var(--bg-overlay);
}

/* Message Bubbles - base structure for theming */
.message-bubble {
  transition: var(--component-theme-transition), transform 0.2s var(--ease-out);
  position: relative; /* For pseudo-elements or theme-specific decorations */
  overflow: hidden; /* If themes add internal layers */
}

/* Buttons - base structure for theming */
.btn {
  transition: var(--component-theme-transition), transform 0.15s var(--ease-out);
}

/* ==========================================================================
   CHARACTER UI BASE STYLES
   (Specific character visuals are in theme-specific character CSS)
   ========================================================================== */

.character-ui {
  position: fixed;
  z-index: var(--z-character-ui);
  pointer-events: none; /* Usually non-interactive unless specific parts are made interactive */
  user-select: none;
  opacity: 0; /* Hidden by default, themes/JS make them visible */
  visibility: hidden;
  transition: opacity 0.5s var(--ease-out), transform 0.5s var(--ease-out), visibility 0s linear 0.5s;
  will-change: transform, opacity;
  transform: translateZ(0); /* Promote to own layer for performance */
}

.character-ui.active, /* When a character is the active one */
.character-ui.visible { /* General visibility control by JS */
  opacity: 1;
  visibility: visible;
  transition-delay: 0s;
}

/* Base for speech bubbles if characters have them */
.character-speech-bubble {
  position: absolute;
  background-color: var(--bg-elevated);
  color: var(--text-primary);
  padding: var(--space-sm) var(--space-md);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-lg);
  border: 1px solid var(--border);
  font-size: var(--font-size-sm);
  line-height: var(--line-height-tight);
  max-width: 250px;
  opacity: 0;
  visibility: hidden;
  transform: translateY(10px) scale(0.95);
  transition: opacity 0.3s var(--ease-out), transform 0.3s var(--ease-spring), visibility 0s linear 0.3s;
  will-change: transform, opacity;
  z-index: var(--z-character-speech-bubble);
}

.character-speech-bubble.visible {
  opacity: 1;
  visibility: visible;
  transform: translateY(0) scale(1);
  transition-delay: 0s;
}

/* Tail for speech bubble (example pointing down) */
.character-speech-bubble::after {
  content: '';
  position: absolute;
  bottom: -8px; /* Adjust if arrow is different size */
  left: 20px;  /* Adjust for positioning */
  width: 0;
  height: 0;
  border-left: 8px solid transparent;
  border-right: 8px solid transparent;
  border-top: 8px solid var(--bg-elevated); /* Match bubble background */
  filter: drop-shadow(0 1px 1px rgba(0,0,0,0.1)); /* Optional shadow for tail */
}
/* Themes might need to adjust tail color or position if bubble background changes drastically */

/* ==========================================================================
   THEME TRANSITION OVERLAYS - BASE STRUCTURE
   Specific transition animations (Jaws wave, Jurassic gates) are in their
   respective CSS files (e.g., themes/jaws/transitions.css).
   ========================================================================== */

.theme-transition-overlay {
  /* Already defined in main.css, but can be reinforced here if needed */
  /* Example: ensure it covers everything if themes use complex layers */
  /* background-color: var(--bg-primary); /* Fallback background */
}

/* Generic animation container within the overlay */
.transition-animation-container {
  position: absolute;
  width: 100%;
  height: 100%;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* ==========================================================================
   PLACEHOLDERS FOR THEME-SPECIFIC ANIMATION CLASSES
   Actual keyframes and application are in theme animation files.
   This ensures that if a theme CSS fails to load, there are no undefined animation names.
   ========================================================================== */

/* Loading Screen Animations (defined in default/animations.css, can be overridden) */
.loading-logo { animation-name: pulseLogoLoadingEnhancedOpus; /* Default fallback */ }
.loading-text { animation-name: fadeInTextLoadingEnhancedOpus; }
.progress-bar { animation-name: progressBarShineOpus; }
.loading-tip { animation-name: fadeInTipLoadingOpus; }

/* Message Animations (defined in default/animations.css) */
.message { animation-name: messageAppearOpus; }
.message.assistant .message-avatar { animation-name: typingAvatarBounceEnhanced; } /* For typing indicator */
.typing-dot { animation-name: typingDotBounceOpus; }

/* ==========================================================================
   ACCESSIBILITY & PERFORMANCE BASE FOR THEMED ELEMENTS
   ========================================================================== */

@media (prefers-reduced-motion: reduce) {
  .character-ui,
  .character-speech-bubble,
  .theme-transition-overlay {
    transition-duration: 0.01ms !important; /* Make transitions instant */
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important; /* Prevent looping */
  }
}

/*
  GPU Acceleration Hint:
  Elements that are heavily animated or transformed by themes should have
  `transform: translateZ(0);` or `will-change: transform, opacity;`
  applied in their respective theme CSS or component CSS for performance.
  .gpu-accelerate utility class can also be used.
*/
