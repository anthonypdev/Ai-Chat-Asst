/* ==========================================================================
   JURASSIC PARK THEME - ANIMATIONS
   Production-Ready AAA Quality Implementation
   ========================================================================== */

/* CSS Custom Properties for Animation Control (from original file) */
:root { /* These might be better in jurassic/theme.css or core/variables.css under [data-theme="jurassic"] */
  --jp-foliage-sway-duration: 8s;
  --jp-tremor-intensity: 2px; /* Used by jp-ground-tremor implicitly */
  --jp-electric-pulse-speed: 1.5s;
  --jp-dna-rotation-speed: 3s;
  --jp-amber-glow-speed: 4s;
  --jp-pterodactyl-flight-duration: 45s;
  --jp-rain-fall-speed: 2s;
  --jp-lightning-duration: 0.3s;
}

/* ==========================================================================
   ENVIRONMENTAL ANIMATIONS
   ========================================================================== */

/* Jungle Foliage Sway Animation */
@keyframes jp-foliage-sway {
  0% {
    transform: translateX(0) rotate(0deg) scale(1) translateZ(0);
    filter: brightness(0.9) hue-rotate(0deg);
  }
  25% {
    transform: translateX(-8px) rotate(-2deg) scale(1.02) translateZ(0);
    filter: brightness(1.1) hue-rotate(5deg);
  }
  50% {
    transform: translateX(0) rotate(0deg) scale(1) translateZ(0);
    filter: brightness(0.95) hue-rotate(0deg);
  }
  75% {
    transform: translateX(8px) rotate(2deg) scale(0.98) translateZ(0);
    filter: brightness(1.05) hue-rotate(-3deg);
  }
  100% {
    transform: translateX(0) rotate(0deg) scale(1) translateZ(0);
    filter: brightness(0.9) hue-rotate(0deg);
  }
}

/* Dense Jungle Background Animation */
@keyframes jp-jungle-depth { /* Animating background-position is generally okay */
  0% {
    background-position: 0% 0%, 50% 50%, 100% 0%;
    opacity: 0.7;
  }
  33% {
    background-position: -20% 10%, 60% 40%, 80% 15%;
    opacity: 0.85;
  }
  66% {
    background-position: -40% 20%, 70% 30%, 60% 30%;
    opacity: 0.75;
  }
  100% {
    background-position: 0% 0%, 50% 50%, 100% 0%;
    opacity: 0.7;
  }
}

/* Tremor/Earthquake Effects */
@keyframes jp-ground-tremor { /* Uses transform, good */
  0%, 100% { transform: translateX(0) translateY(0) rotate(0deg) translateZ(0); }
  10% { transform: translateX(calc(var(--jp-tremor-intensity) * -0.5)) translateY(calc(var(--jp-tremor-intensity) * -0.5)) rotate(-0.2deg) translateZ(0); }
  20% { transform: translateX(var(--jp-tremor-intensity)) translateY(calc(var(--jp-tremor-intensity) * 0.5)) rotate(0.3deg) translateZ(0); }
  30% { transform: translateX(calc(var(--jp-tremor-intensity) * -1)) translateY(calc(var(--jp-tremor-intensity) * -0.5)) rotate(-0.1deg) translateZ(0); }
  40% { transform: translateX(calc(var(--jp-tremor-intensity) * 0.5)) translateY(var(--jp-tremor-intensity)) rotate(0.2deg) translateZ(0); }
  /* ... remaining steps adjusted similarly if --jp-tremor-intensity is used directly */
  50% { transform: translateX(-1px) translateY(-2px) rotate(-0.3deg) translateZ(0); }
  60% { transform: translateX(2px) translateY(1px) rotate(0.1deg) translateZ(0); }
  70% { transform: translateX(-2px) translateY(-1px) rotate(-0.2deg) translateZ(0); }
  80% { transform: translateX(1px) translateY(1px) rotate(0.3deg) translateZ(0); }
  90% { transform: translateX(-1px) translateY(-1px) rotate(-0.1deg) translateZ(0); }
}

/* Intense Tremor for Raptor Approach */
@keyframes jp-raptor-tremor { /* Uses transform, good */
  0%, 100% { transform: translateX(0) translateY(0) rotate(0deg) translateZ(0); }
  5% { transform: translateX(-3px) translateY(-2px) rotate(-0.5deg) translateZ(0); }
  10% { transform: translateX(4px) translateY(2px) rotate(0.6deg) translateZ(0); }
  /* ... etc. adding translateZ(0) to all steps */
  15% { transform: translateX(-4px) translateY(-2px) rotate(-0.3deg) translateZ(0); }
  20% { transform: translateX(3px) translateY(3px) rotate(0.4deg) translateZ(0); }
  25% { transform: translateX(-2px) translateY(-3px) rotate(-0.6deg) translateZ(0); }
  30% { transform: translateX(4px) translateY(2px) rotate(0.2deg) translateZ(0); }
  35% { transform: translateX(-4px) translateY(-2px) rotate(-0.4deg) translateZ(0); }
  40% { transform: translateX(2px) translateY(2px) rotate(0.5deg) translateZ(0); }
  45% { transform: translateX(-3px) translateY(-2px) rotate(-0.3deg) translateZ(0); }
  50% { transform: translateX(0) translateY(0) rotate(0deg) translateZ(0); }
}

/* ==========================================================================
   ELECTRIC FENCE ANIMATIONS
   ========================================================================== */

/* Electric Fence Spark Effect */
@keyframes jp-electric-spark { /* Uses transform, opacity, filter. Filter is for effect. */
  0%    { opacity: 0; transform: scale(0.5) rotate(0deg) translateZ(0); filter: brightness(1); }
  10%   { opacity: 1; transform: scale(1.2) rotate(45deg) translateZ(0); filter: brightness(2) hue-rotate(30deg); }
  /* ... etc. adding translateZ(0) */
  20%   { opacity: 0.7; transform: scale(0.8) rotate(90deg) translateZ(0); filter: brightness(1.5) hue-rotate(-15deg); }
  30%   { opacity: 1; transform: scale(1.5) rotate(180deg) translateZ(0); filter: brightness(2.5) hue-rotate(60deg); }
  40%   { opacity: 0.3; transform: scale(0.6) rotate(270deg) translateZ(0); filter: brightness(1) hue-rotate(0deg); }
  100%  { opacity: 0; transform: scale(0.1) rotate(360deg) translateZ(0); filter: brightness(0.5); }
}

/* Fence Warning Light Pulse */
@keyframes jp-fence-warning { /* Animates background-color, box-shadow, text-shadow. Can be costly. */
  0%, 100% {
    background-color: var(--gray-800); /* Using a variable for off-state */
    box-shadow: none;
    text-shadow: none;
  }
  50% {
    background-color: var(--electric-yellow); /* Variable defined for this theme */
    box-shadow: 0 0 20px var(--electric-yellow), 0 0 40px var(--caution-orange);
    text-shadow: 0 0 10px var(--electric-yellow);
  }
}

/* Electric Current Flow */
@keyframes jp-electric-current { /* Uses transform, opacity, filter. Good. */
  0%   { transform: translateX(-100%) translateZ(0); opacity: 0; }
  50%  { opacity: 1; filter: brightness(2); }
  100% { transform: translateX(100%) translateZ(0); opacity: 0; }
}

/* ==========================================================================
   DNA AND AMBER ANIMATIONS
   ========================================================================== */

@keyframes jp-dna-helix { /* Uses transform, filter. Good. */
  0%    { transform: rotateY(0deg) rotateX(0deg) translateZ(0); filter: hue-rotate(0deg) brightness(1); }
  /* ... etc. adding translateZ(0) to all steps */
  25%   { transform: rotateY(90deg) rotateX(10deg) translateZ(0); filter: hue-rotate(90deg) brightness(1.2); }
  50%   { transform: rotateY(180deg) rotateX(0deg) translateZ(0); filter: hue-rotate(180deg) brightness(1); }
  75%   { transform: rotateY(270deg) rotateX(-10deg) translateZ(0); filter: hue-rotate(270deg) brightness(1.2); }
  100%  { transform: rotateY(360deg) rotateX(0deg) translateZ(0); filter: hue-rotate(360deg) brightness(1); }
}

@keyframes jp-amber-glow { /* Uses filter, transform. Good. */
  0%    { filter: brightness(1) saturate(1) drop-shadow(0 0 5px rgba(var(--primary-rgb), 0.3)); transform: scale(1) translateZ(0); }
  /* ... etc. using variables and translateZ(0) */
  50%   { filter: brightness(1.4) saturate(1.3) drop-shadow(0 0 25px rgba(var(--primary-light-rgb), 0.8)); transform: scale(1.05) translateZ(0); }
  100%  { filter: brightness(1) saturate(1) drop-shadow(0 0 5px rgba(var(--primary-rgb), 0.3)); transform: scale(1) translateZ(0); }
}

@keyframes jp-mosquito-float { /* Uses transform, opacity. Good. */
  0%    { transform: translateY(0px) rotate(0deg) translateZ(0); opacity: 0.6; }
  /* ... etc. adding translateZ(0) */
  25%   { transform: translateY(-2px) rotate(2deg) translateZ(0); opacity: 0.8; }
  50%   { transform: translateY(-1px) rotate(0deg) translateZ(0); opacity: 0.7; }
  75%   { transform: translateY(1px) rotate(-2deg) translateZ(0); opacity: 0.9; }
  100%  { transform: translateY(0px) rotate(0deg) translateZ(0); opacity: 0.6; }
}

/* ==========================================================================
   CREATURE ANIMATIONS
   ========================================================================== */

/* Pterodactyl Flight Path - Refactored to use transform primarily */
/* Assumes the element using this animation is initially positioned, e.g., top: 15%; left: 0; */
@keyframes jp-pterodactyl-flight {
  0% {
    transform: translateX(-150px) translateY(0vh) scale(0.8) rotateZ(-5deg) translateZ(0);
    opacity: 0;
  }
  10% {
    opacity: 0.7;
    transform: translateX(10vw) translateY(-1vh) scale(0.9) rotateZ(0deg) translateZ(0);
  }
  25% { /* Original top: 10% from an assumed 15% base = -5% of parent height, approximated with vh */
    opacity: 0.9;
    transform: translateX(25vw) translateY(-2.5vh) scale(1) rotateZ(3deg) translateZ(0);
  }
  50% { /* Original top: 8% from 15% base = -7% */
    opacity: 1;
    transform: translateX(50vw) translateY(-3.5vh) scale(1.1) rotateZ(-2deg) translateZ(0);
  }
  75% { /* Original top: 12% from 15% base = -3% */
    opacity: 0.8;
    transform: translateX(75vw) translateY(-1.5vh) scale(1.05) rotateZ(4deg) translateZ(0);
  }
  90% {
    opacity: 0.5;
    transform: translateX(90vw) translateY(0vh) scale(0.9) rotateZ(-3deg) translateZ(0);
  }
  100% { /* Original top: 18% from 15% base = +3% */
    opacity: 0;
    transform: translateX(calc(100vw + 150px)) translateY(1.5vh) scale(0.7) rotateZ(-8deg) translateZ(0);
  }
}


@keyframes jp-wing-flap { /* Uses transform. Good. */
  0%, 100% { transform: scaleY(1) skewX(0deg) translateZ(0); }
  /* ... etc. adding translateZ(0) */
  25%   { transform: scaleY(0.7) skewX(-5deg) translateZ(0); }
  50%   { transform: scaleY(0.4) skewX(0deg) translateZ(0); }
  75%   { transform: scaleY(0.7) skewX(5deg) translateZ(0); }
}

/* ==========================================================================
   MR. DNA CHARACTER ANIMATIONS (Examples, assuming full set is similar)
   ========================================================================== */

@keyframes jp-dna-idle-bob { /* Uses transform, filter. Good. */
  0%, 100% { transform: translateY(0px) rotate(0deg) scale(1) translateZ(0); filter: brightness(1); }
  50%   { transform: translateY(-8px) rotate(2deg) scale(1.02) translateZ(0); filter: brightness(1.1); }
}

@keyframes jp-dna-talk { /* Uses transform. Good. */
  0%    { transform: scale(1) rotate(0deg) translateZ(0); }
  /* ... etc. adding translateZ(0) */
  10%   { transform: scale(1.05) rotate(-2deg) translateZ(0); }
  20%   { transform: scale(0.98) rotate(2deg) translateZ(0); }
  100%  { transform: scale(1) rotate(0deg) translateZ(0); }
}

/* ... Other jp-dna animations would follow similar patterns, ensuring use of transform/opacity/filter */

/* ==========================================================================
   WALKIE-TALKIE AND COMMUNICATION EFFECTS
   ========================================================================== */

@keyframes jp-antenna-sway { /* Uses transform. Good. */
  0%, 100% { transform: rotate(0deg) translateZ(0); transform-origin: bottom center; }
  50%   { transform: rotate(3deg) translateZ(0); transform-origin: bottom center; }
}

@keyframes jp-static-noise { /* background-position and opacity, acceptable */
  0%    { background-position: 0% 0%; opacity: 0.3; }
  /* ... */
  100%  { background-position: 100% 0%; opacity: 0.3; }
}

@keyframes jp-radio-led { /* background-color, box-shadow. Potentially costly. */
  0%, 100% { background-color: var(--gray-800); box-shadow: none; }
  50%   { background-color: var(--error); box-shadow: 0 0 10px var(--error), 0 0 20px var(--error-rgb); }
}

/* ==========================================================================
   WEATHER AND ATMOSPHERIC EFFECTS
   ========================================================================== */

@keyframes jp-rain-fall { /* transform, opacity. Good. */
  0%   { transform: translateY(-100vh) translateX(0) translateZ(0); opacity: 0.8; }
  100% { transform: translateY(100vh) translateX(50px) translateZ(0); opacity: 0; }
}

@keyframes jp-lightning-flash { /* background-color, opacity. Good for flashes. */
  0%, 90%, 100% { background-color: transparent; opacity: 0; }
  /* ... */
  15% { background-color: rgba(var(--white-rgb), 0.9); opacity: 1; }
}

@keyframes jp-fog-roll { /* transform, opacity. Good. */
  0%   { transform: translateX(-100%) translateY(0) translateZ(0); opacity: 0; }
  /* ... */
  100% { transform: translateX(100%) translateY(0) translateZ(0); opacity: 0; }
}

/* ==========================================================================
   PARALLAX AND DEPTH EFFECTS
   ========================================================================== */

@keyframes jp-parallax-slow { /* transform. Good. */
  0%   { transform: translateX(0) translateY(0) translateZ(0); }
  100% { transform: translateX(-50px) translateY(-20px) translateZ(0); }
}
/* jp-parallax-medium, jp-parallax-fast similar */


/* ==========================================================================
   GATE TRANSITION PREPARATION ANIMATIONS
   ========================================================================== */

@keyframes jp-pre-gate-dim { /* filter, backdrop-filter. backdrop-filter is very costly. */
  0%   { filter: brightness(1) contrast(1); backdrop-filter: none; }
  100% { filter: brightness(0.3) contrast(1.2) sepia(0.3); backdrop-filter: blur(2px); }
}

/* ==========================================================================
   UTILITY ANIMATIONS
   ========================================================================== */

@keyframes jp-fade-in-scale { /* opacity, transform. Good. */
  0%   { opacity: 0; transform: scale(0.8) translateY(20px) translateZ(0); }
  100% { opacity: 1; transform: scale(1) translateY(0) translateZ(0); }
}

/* ... Other utility animations like jp-fade-out-scale, jp-attention-pulse similarly good. */

/* ==========================================================================
   PERFORMANCE OPTIMIZATIONS (Class to apply these hints)
   ========================================================================== */

[data-theme="jurassic"] .animated-element {
  will-change: transform, opacity, filter;
  transform: translateZ(0); /* Promote to own layer */
  backface-visibility: hidden; /* Can prevent flickering on 3D transforms */
  perspective: 1000px; /* Required for 3D, can sometimes help 2D */
}

/* ==========================================================================
   REDUCED MOTION (Already present and correct)
   ========================================================================== */
@media (prefers-reduced-motion: reduce) {
  [data-theme="jurassic"] * {
    animation-duration: 0.01ms !important; /* Effectively freeze animation */
    animation-iteration-count: 1 !important; /* Prevent looping */
    transition-duration: 0.01ms !important;
    /* transition-delay should also be 0s or -1ms if animations are fully disabled */
  }
}

/* ==========================================================================
   ANIMATION APPLICATION CLASSES (Retained from original)
   ========================================================================== */

/* Environmental Classes */
.jp-foliage-sway { animation: jp-foliage-sway var(--jp-foliage-sway-duration) ease-in-out infinite; }
.jp-jungle-depth { animation: jp-jungle-depth 30s ease-in-out infinite alternate; }
.jp-ground-tremor { animation: jp-ground-tremor 0.5s ease-in-out; } /* Removed 'both' as it's for one-shot */
.jp-raptor-tremor { animation: jp-raptor-tremor 0.8s ease-in-out; } /* Removed 'both' */

/* Electric Fence Classes */
.jp-electric-spark { animation: jp-electric-spark var(--jp-electric-pulse-speed) ease-out; } /* Removed 'forwards' if it's a repeating spark, or keep if one-shot */
.jp-fence-warning { animation: jp-fence-warning var(--jp-electric-pulse-speed) ease-in-out infinite; }
.jp-electric-current { animation: jp-electric-current 1s linear infinite; }

/* DNA and Amber Classes */
.jp-dna-helix { animation: jp-dna-helix var(--jp-dna-rotation-speed) linear infinite; }
.jp-amber-glow { animation: jp-amber-glow var(--jp-amber-glow-speed) ease-in-out infinite; }
.jp-mosquito-float { animation: jp-mosquito-float 3s ease-in-out infinite; }

/* Character Classes */
.jp-dna-idle { animation: jp-dna-idle-bob 2s ease-in-out infinite; }
.jp-dna-talking { animation: jp-dna-talk 0.3s ease-in-out infinite; } /* Assuming this should loop while talking */
.jp-dna-undulate { animation: jp-dna-undulate 4s ease-in-out infinite; }
.jp-dna-particles { animation: jp-dna-particles 2s ease-out infinite; } /* If particles re-emit, infinite is fine */

/* Communication Classes */
.jp-antenna-sway { animation: jp-antenna-sway 3s ease-in-out infinite; }
.jp-static-noise { animation: jp-static-noise 0.1s linear infinite; }
.jp-radio-led { animation: jp-radio-led 1s ease-in-out infinite; }

/* Weather Classes */
.jp-rain-fall { animation: jp-rain-fall var(--jp-rain-fall-speed) linear infinite; }
.jp-lightning-flash { animation: jp-lightning-flash var(--jp-lightning-duration) ease-out; } /* Likely one-shot */
.jp-fog-roll { animation: jp-fog-roll 20s ease-in-out infinite; }

/* Pterodactyl Classes */
.jp-pterodactyl-flight { animation: jp-pterodactyl-flight var(--jp-pterodactyl-flight-duration) linear infinite; }
.jp-wing-flap { animation: jp-wing-flap 0.8s ease-in-out infinite; }

/* Utility Classes */
.jp-fade-in { animation: jp-fade-in-scale 0.6s ease-out forwards; }
.jp-fade-out { animation: jp-fade-out-scale 0.4s ease-in forwards; }
.jp-pulse { animation: jp-attention-pulse 2s ease-in-out infinite; }
